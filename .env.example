# ========================================
# VectorIcons Backend - Environment Variables
# ========================================
# This is a sanitized example for portfolio purposes.
# Actual production values are not included.

# ----------------------------------------
# Application
# ----------------------------------------
NODE_ENV=development
PORT=3000
API_HOST=localhost

# ----------------------------------------
# Database (PostgreSQL)
# ----------------------------------------
DATABASE_URL=postgresql://username:password@localhost:5432/vectoricons
DB_HOST=localhost
DB_PORT=5432
DB_NAME=vectoricons
DB_USER=postgres
DB_PASSWORD=your_password_here
DB_SSL=false
DB_POOL_MIN=2
DB_POOL_MAX=10

# ----------------------------------------
# Redis Cache
# ----------------------------------------
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_TTL=3600

# ----------------------------------------
# AWS Services
# ----------------------------------------
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_access_key_here
AWS_SECRET_ACCESS_KEY=your_secret_key_here

# S3 Storage
AWS_S3_BUCKET=vectoricons-assets
AWS_S3_REGION=us-east-1
S3_ICONS_PREFIX=icons/
S3_IMAGES_PREFIX=images/

# CloudFront CDN
CLOUDFRONT_DOMAIN=d1234567890abc.cloudfront.net
CLOUDFRONT_KEY_PAIR_ID=APKA1234567890ABC
CLOUDFRONT_PRIVATE_KEY_PATH=/path/to/cloudfront-private-key.pem

# SNS (Notifications)
AWS_SNS_TOPIC_ARN=arn:aws:sns:us-east-1:123456789012:vectoricons-notifications

# SQS (Queue Processing)
AWS_SQS_QUEUE_URL=https://sqs.us-east-1.amazonaws.com/123456789012/image-processing

# ----------------------------------------
# Authentication & Security
# ----------------------------------------
# Note: Auth implementation removed for portfolio
JWT_SECRET=your_jwt_secret_key_minimum_32_characters_long
JWT_EXPIRES_IN=7d
BCRYPT_ROUNDS=10
SESSION_SECRET=your_session_secret_key_here

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ----------------------------------------
# External Services
# ----------------------------------------
# Stripe (Payment Processing)
# Note: Payment processing details removed for portfolio
STRIPE_SECRET_KEY=sk_test_51AbCdEfGhIjKlMnOpQrStUvWx
STRIPE_PUBLISHABLE_KEY=pk_test_51AbCdEfGhIjKlMnOpQrStUvWx
STRIPE_WEBHOOK_SECRET=whsec_AbCdEfGhIjKlMnOpQrStUvWxYz

# Slack Integration
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXX
SLACK_ERROR_CHANNEL=#site-errors
SLACK_SIGNUP_CHANNEL=#user-signups

# Email (AWS SES)
SES_FROM_EMAIL=noreply@vectoricons.net
SES_FROM_NAME=VectorIcons
SES_REPLY_TO_EMAIL=support@vectoricons.net
ADMIN_EMAIL=admin@vectoricons.net

# SendGrid (Alternative Email Provider)
SENDGRID_API_KEY=SG.AbCdEfGhIjKlMnOpQrStUvWx.YzAbCdEfGhIjKlMnOpQrStUvWxYzAbCdEf

# ----------------------------------------
# Logging & Monitoring
# ----------------------------------------
LOG_LEVEL=info
LOG_FORMAT=json

# Datadog APM
# DD_AGENT_HOST=localhost
# DD_TRACE_AGENT_PORT=8126
# DD_SERVICE=vectoricons-api
# DD_ENV=production

# Sentry Error Tracking
# SENTRY_DSN=https://abc123@o123456.ingest.sentry.io/1234567
# SENTRY_ENVIRONMENT=production
# SENTRY_TRACES_SAMPLE_RATE=0.1

# ----------------------------------------
# Feature Flags
# ----------------------------------------
ENABLE_CACHING=true
ENABLE_RATE_LIMITING=true
ENABLE_EMAIL_NOTIFICATIONS=true
ENABLE_SLACK_NOTIFICATIONS=false

# ----------------------------------------
# Development/Testing
# ----------------------------------------
# Test Database
TEST_DATABASE_URL=postgresql://username:password@localhost:5432/vectoricons_test

# Debug
DEBUG=false
VERBOSE_LOGGING=false

# Mock External Services (for development)
MOCK_STRIPE=false
MOCK_S3=false
MOCK_EMAIL=false

# ----------------------------------------
# Notes
# ----------------------------------------
# This is a portfolio example. In production:
# - Use AWS Secrets Manager or similar for sensitive values
# - Never commit .env files to version control
# - Rotate keys regularly
# - Use different credentials per environment
# - Enable SSL/TLS for all database connections
# - Use IAM roles instead of access keys when possible
